-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.admin
(
    id SERIAL PRIMARY KEY,
    name TEXT COLLATE pg_catalog."default" NOT NULL,
    surname TEXT COLLATE pg_catalog."default" NOT NULL
);

CREATE TABLE IF NOT EXISTS public.doctor
(
    id SERIAL PRIMARY KEY,
    name TEXT COLLATE pg_catalog."default" NOT NULL,
    surname TEXT COLLATE pg_catalog."default" NOT NULL,
    sector_id integer NOT NULL
);

CREATE TABLE IF NOT EXISTS public.exam
(
    id SERIAL PRIMARY KEY,
    patient_id integer NOT NULL,
    doctor_id integer NOT NULL,
    done boolean NOT NULL,
    date date NOT NULL,
    results_mongodb TEXT COLLATE pg_catalog."default" NOT NULL
);

CREATE TABLE IF NOT EXISTS public.nurse
(
    id SERIAL PRIMARY KEY,
    name TEXT COLLATE pg_catalog."default" NOT NULL,
    surname TEXT COLLATE pg_catalog."default" NOT NULL
);

CREATE TABLE IF NOT EXISTS public.patient
(
    id SERIAL PRIMARY KEY,
    doctor_id integer NOT NULL,
    admin_id integer NOT NULL,
    status_id integer NOT NULL,
    name TEXT COLLATE pg_catalog."default" NOT NULL,
    surname TEXT COLLATE pg_catalog."default" NOT NULL,
    birth_date date NOT NULL,
    gender character(1) COLLATE pg_catalog."default",
    history_mongo_id TEXT COLLATE pg_catalog."default" NOT NULL
);

CREATE TABLE IF NOT EXISTS public.sector
(
    id SERIAL PRIMARY KEY,
    name TEXT COLLATE pg_catalog."default" NOT NULL,
    area TEXT COLLATE pg_catalog."default" NOT NULL
);

CREATE TABLE IF NOT EXISTS public.status
(
    id SERIAL PRIMARY KEY,
    value TEXT COLLATE pg_catalog."default" NOT NULL
);

CREATE TABLE IF NOT EXISTS public.treatment
(
    id SERIAL PRIMARY KEY,
    nurse_id integer NOT NULL,
    patient_id integer NOT NULL,
    sector_id integer NOT NULL,
    date date NOT NULL,
    treatment_mongodb_id TEXT COLLATE pg_catalog."default" NOT NULL,
    done boolean NOT NULL
);

ALTER TABLE IF EXISTS public.doctor
    ADD CONSTRAINT doctor_to_sector FOREIGN KEY (sector_id)
    REFERENCES public.sector (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.exam
    ADD CONSTRAINT exam_to_doctor FOREIGN KEY (doctor_id)
    REFERENCES public.doctor (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.exam
    ADD CONSTRAINT exam_to_patient FOREIGN KEY (patient_id)
    REFERENCES public.patient (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.patient
    ADD CONSTRAINT patient_to_admin FOREIGN KEY (admin_id)
    REFERENCES public.admin (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.patient
    ADD CONSTRAINT patient_to_doctor FOREIGN KEY (doctor_id)
    REFERENCES public.doctor (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.patient
    ADD CONSTRAINT patient_to_status FOREIGN KEY (status_id)
    REFERENCES public.status (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.treatment
    ADD CONSTRAINT treatment_to_nurse FOREIGN KEY (nurse_id)
    REFERENCES public.nurse (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.treatment
    ADD CONSTRAINT treatment_to_patient FOREIGN KEY (patient_id)
    REFERENCES public.patient (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.treatment
    ADD CONSTRAINT treatment_to_sector FOREIGN KEY (sector_id)
    REFERENCES public.sector (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;